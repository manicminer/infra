# Clone the repo and rename this file to .env if you want to run the frontend react app locally for some quick contributions to the project.
# When used as it is, this env config will connect to our hosted UAT backend
# Note that any data in staging will get cleared from time to time and you may have to sign up again and again

NODE_ENV=production

# Set it to the URL form where the app home page will be accessed
PUBLIC_URL=https://{{ opensign.server_name }}
# Set it to true if you want to generate the Sourcemap for debugging
GENERATE_SOURCEMAP=false
# Set it to the URL from where APIs will be accessible, for local development it should be localhost:3000/api/app (use your local port number instead)
# REACT_APP_SERVERURL=http://localhost:8080/app
# A 12 character long random app identifier. The value of this should be same as APP_ID which is a variable used by backend API.
REACT_APP_APPID=opensign


# Backend ExpressJS config ****************************************************************************************************************************************************************************************
# A 12 character long random app identifier. The value of this should be same as REACT_APP_APPID which is a variable used by Frontend React App.
APP_ID=opensign
# Name of the app. It will be visible in the verification emails sent out.
appName=open_sign_server
# A 12 character long random secret key that allows access to all the data. It is used in Parse dashboard config to view all the data in the database.
MASTER_KEY=54M1sR7EW0AGg
# Mongodb URI to connect to
MONGODB_URI=mongodb://{{ opensign.mongodb_host }}:{{ opensign.mongodb_port }}/{{ opensign.mongodb_db }}
# Path on which APIs should be mounted. Do not change this. This variable shall be removed & value hardcoded in the source code in coming versions.
PARSE_MOUNT=/app
# Set it to the URL from where APIs will be accessible to the NodeJS functions, for local development it should be localhost:3000/api/app (use your local port number instead)
SERVER_URL=https://{{ server_name }}/app

# Storage config ************************************************************************************************************************************************************************************************
# Digital ocean space name or AWS S3 bucket name for uploading documents
#DO_SPACE=DOSPACENAME
# Digital ocean spaces endpoint or AWS S3 endpoint for uploading documents
#DO_ENDPOINT=ams3.digitaloceanspaces.com
# Digital ocean baseurl or AWS S3 base URL
#DO_BASEURL=https://DOSPACENAME.ams3.digitaloceanspaces.com
# Digital ocean spaces access key ID or AWS s3 Access key ID for uploading the docs
#DO_ACCESS_KEY_ID=
# Digital ocean spaces secret access key or AWS s3 secret access key for uploading the docs
#DO_SECRET_ACCESS_KEY=
# Digital ocean spaces region or AWS s3 region
#DO_REGION=us-west
# local storage
USE_LOCAL=true

# Email mailgun or set SMTP_ENABLE true to use SMTP config (The app will not initialize if any of these 3 variables are not set) *********************************************************************************************************************
#MAILGUN_API_KEY=
#MAILGUN_DOMAIN=mail.yourdomain.com
#MAILGUN_SENDER=postmaster@mail.yourdomain.com
SMTP_ENABLE=true
SMTP_HOST={{ opensign.smtp_host }}
SMTP_PORT={{ opensign.smtp_port }}
SMTP_USERNAME={{ opensign.smtp_user }}
SMTP_PASS='{{ opensign.smtp_pass }}'
SMTP_USER_EMAIL=opensign@{{ ansible_facts['fqdn'] }}


# Base64 encoded PFX or p12 document signing certificate file *********************************************************************************************************************
PFX_BASE64='{{ lookup("ansible.builtin.file", "signing.pfx") | b64encode }}'

# Passphrase for PFX or p12 document
PASS_PHRASE={{ opensign.pfx_pass }}
