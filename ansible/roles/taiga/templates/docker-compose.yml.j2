x-volumes:
  &back-volumes
  - taiga-static-data:/taiga-back/static
  - taiga-media-data:/taiga-back/media
  - ./config.py:/taiga-back/settings/config.py

services:
  taiga-back:
    build:
      dockerfile: Dockerfile.taiga-back
    volumes: *back-volumes
    networks:
      - taiga

  taiga-async:
    build:
      dockerfile: Dockerfile.taiga-back
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    volumes: *back-volumes
    networks:
      - taiga

  taiga-front:
    build:
      dockerfile: Dockerfile.taiga-front
    networks:
      - taiga
    volumes:
      - ./conf.json:/usr/share/nginx/html/conf.json

  taiga-events:
    image: taigaio/taiga-events:{{ taiga_versions.events }}
    environment:
      RABBITMQ_URL: "amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@${RABBITMQ_HOST}:5672/${RABBITMQ_VHOST}"
      TAIGA_EVENTS_RABBITMQ_HOST: "${RABBITMQ_HOST}"
      SECRET_KEY: "${SECRET_KEY}"
    networks:
      - taiga

  taiga-protected:
    image: taigaio/taiga-protected:{{ taiga_versions.protected }}
    environment:
      MAX_AGE: 3600
      SECRET_KEY: "${SECRET_KEY}"
    networks:
      - taiga

  taiga-gateway:
    image: nginx:1.19-alpine
    ports:
      - "127.0.0.1:9000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - taiga-static-data:/taiga/static
      - taiga-media-data:/taiga/media
    networks:
      - taiga
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events

  taiga-manage:
    build:
      dockerfile: Dockerfile.taiga-back
    entrypoint: "python manage.py"
    volumes: *back-volumes
    networks:
      - taiga
    profiles:
      - management

volumes:
  taiga-static-data:
  taiga-media-data:

networks:
  taiga:
